바인드 변수 

 - 연결해놓은 포인트컷을 pjp객체로 만들어서 인자로 사용 ⇛  springContainer가 수행해줌 

printLog(pjp); 
⇛  printLog를 호출할때 pjp가 필요 

public class AroundAdvice {
	public Object printLog(ProceedingJoinPoint pjp) throws Throwable {
		System.out.println("pjp인자를 갖는 메서드에서 출력하는 문구 -1");
		Object obj=pjp.proceed(); ⇛  nullPointerException이 발생하지 않는다 . 
									  why? 
									  SpringContainer가 수행해서 연결해놓은 포인트컷(핵심로직)을 
									  pjp객체로 만들어서 인자로 사용할 수 있겠끔 해 줌
		System.out.println("pjp인자를 갖는 메서드에서 출력하는 문구 -2");
		return obj;
	}
}

스프링 컨테이너가 IoC,AOP 를 지원하는 덕에 메서드 끼리의 결합이 용이 해졌다.
횡단관심 + 핵심관심을 결합할때 많이 사용
→ 로깅처리 (내가 어떤 핵심관심에 결합되어있는지 생각할 필요가 별로 없음)
→ 트랜잭션 , 보안, 인증 (하지만 트랜잭션,보안,인증 의 경우 핵심관심이 무엇인지 알 필요가 있음 ) 
클라이언트가 사용하는 비즈니스메서드(즉, 핵심관심)의 정보를 받아오는 JoinPoint 인터페이스 
									==> ProceedingJoinPoint 
⇛ 이 모든 일이 가능한 이유는 springContainer가 객체를 생성관리해주기 때문 


		 