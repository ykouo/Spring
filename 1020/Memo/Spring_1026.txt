결합도를 낮추자!
객체를 생성 및 관리
applicationContext.xml
<bean>  --> DI 의존성 주입
@어노테이션
<context>

 높은 응집도
 AOP 관심분리
 
 
 ===================================
 
    현재 코드에서 BoardDAO --> SpringBoardDAO로 바꿔보자
  ==> 바꾸기 싫다.. 다 바꾸려니 귀찮...
  ==> 유지보수에 불리/ 결합도가 높음 / DAO를 바꾸는 일은 흔함
  ----------------------------------------------------
  ServiceImpl == 비즈니스 컴포넌트 
    컴포넌트 == @Component == 객체 == CRUD를 실행하는 실질적 수행 주체 
    → 이 객체를 통해 비즈니스 메서드를 수행할 것  
  ----------------------------------------------------  
  CRUD == 기능 == 비즈니스 메서드 == 핵심관심
  
 ===> 다형성 형성 
 
 
 ======================================
    핵심관심 CRUD 
    횡단관심 AOP 
   현재 ) dao.insert() 직접사용
 	    횡단관심 xxx
  변경후 ) impl.insert()
  			-->dao.insert()
  		impl를 통해서 dao를, 핵심관심을 수행해야 횡단관심을 호출할 수 있음!
  		
 ========================================
 @ 스캔태상에 추가했음!
  코드변경 완료해도, 수행잘 안됨!
  --> Controller가 ServiceImpl를 사용
  
  
  객체 생성 순서가 반대인 상황!
  .do --> DS 
  
  ==> 먼저 ApplicationContext를 봤어야함
  ==> 1개의 추가 스프링컨테이너가 필요함!!!
  
  
  ==========================================
  [순서]
  .do -> DS -> Controller
  "비즈니스 컴포넌트" 생성해야함!
  ServiceImpl
  서버가 시작될때  로드할 수 있도록 
  ContextLoaderListener web.xml에서 설정!
  ==> 2Layred 아키텍처 완성!
  
  
  
  DAO교체 변경하고 싶엉 --> 지금처럼하면 유지보수가 불리 결합도 낮춰보자
  --> 비즈니스 컴포넌트 (ServiceImpl)를 만들어보자 --> applicationContext.xml -->
  